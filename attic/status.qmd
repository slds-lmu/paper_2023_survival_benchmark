---
title: "Benchmark Status"
author: Lukas
date: now
date-format: "YYYY-MM-DD HH:mm:ss Z"
format: 
  html:
   toc: true
   embed-resources: false
   code-fold: true
   fig-align: center
editor: source
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)

root = here::here()
cli::cli_alert_info("Loading config \"{Sys.getenv('R_CONFIG_ACTIVE', 'default')}\"")
settings = config::get()

source(file.path(root, "helpers.R"))

library(data.table)
library(batchtools)
library(kableExtra)
library(dplyr)
library(ggplot2)

# Assumes batchmark.R is run beforehand
reg_dir = file.path(root, settings$reg_name)
reg = loadRegistry(reg_dir, writeable = FALSE)

tablify = function(x) {
  x |>
    kbl() |>
    kable_styling(bootstrap_options = c("striped", "hover"))
}
```

# Current Job Status

```{r}
alljobs = collect_job_table(
  keep_columns = c("job.id", "repl", "tags", "task_id", "learner_id"),
  optional_columns = c("time.running", "submitted", "started", "done")
)

alljobs[, time.running := as.numeric(time.running, unit = "secs")]
job_completion = alljobs |>
  filter(!is.na(done)) |>
  arrange(done) |>
  mutate(
    k = row_number(),
    prop = k / nrow(alljobs)
  )

job_completion |>
  ggplot(aes(x = done, y = prop)) +
  geom_step(linewidth = 1.5) +
  geom_smooth(method = "lm", color = "red", linetype = "dashed") +
  scale_y_continuous(
    breaks = seq(0, 1, .2),
    labels = scales::label_percent(), 
    limits = c(0, 1)
  ) +
  scale_x_datetime(
    date_breaks = "1 day", date_labels = "%b %d",
  ) +
  labs(
    title = "Survival Benchmark Progress",
    subtitle = "Cumulative percentage of finished jobs over time",
    x = "Date", y = "% of total jobs [5088]"
  ) +
  theme_minimal(base_size = 14)

job_completion |>
  filter(done >= lubridate::now() - lubridate::ddays(2)) |>
  ggplot(aes(x = done, y = prop)) +
  geom_step(linewidth = 1.5) +
  geom_smooth(method = "lm", color = "red", linetype = "dashed", fullrange = TRUE) +
  scale_y_continuous(
    #breaks = seq(0, 1, .2),
    labels = scales::label_percent(), 
    #imits = c(0, 1)
  ) +
  scale_x_datetime(
    date_breaks = "1 day", date_labels = "%b %d"
    # limits = c(lubridate::now() - lubridate::ddays(2), lubridate::now() + lubridate::ddays(1))
  ) +
  labs(
    title = "Survival Benchmark Progress",
    subtitle = "Cumulative percentage of finished jobs over the past 48 hours",
    x = "Date", y = "% of total jobs [5088]"
  ) +
  theme_minimal(base_size = 14)
```



## Tuning Measure

```{r}
check_job_state(byvars = "measure") |>
  tablify()

```

## Learner

```{r}
check_job_state(byvars = "learner_id") |>
  tablify()
```

## Task

```{r}
check_job_state(byvars = "task_id") |>
  tablify()
```

## Tuning Measure x Learner

```{r}
check_job_state(byvars = c("measure", "learner_id")) |>
    tablify()
```

## Tuning Measure x Task

```{r}
check_job_state(byvars = c("measure", "task_id")) |>
  tablify()
```

## Learner x Task

```{r}
check_job_state(byvars = c("learner_id", "task_id")) |>
  tablify()
```

## Task x Learner

```{r}
check_job_state(byvars = c("task_id", "learner_id")) |>
  tablify()
```

